# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - compile
  - test
  - build-docker
  - deploy

services:
  - docker:dind


maven-build:
  image: maven:3-jdk-11
  stage: compile
  script: "mvn clean compile"
  artifacts:
    paths:
      - target/*.jar
      
unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the compile stage completes successfully.
  script:
    - mvn test

docker-build:
  stage: build-docker
  image: docker:19.03.10
  before_script:
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set region $AWS_DEFAULT_REGION
    - $(aws ecr get-login --no-include-email --region "${AWS_DEFAULT_REGION}")
  script:
    - echo "Building image"
    - docker build -t $AWS_ECR_URI/drinkDispenser:latest .
    - echo "Tagging image"
    - docker tag $AWS_ECR_URI/drinkDispenser:latest $AWS_ECR_URI
    - docker push $AWS_ECR_URI:latest
       



